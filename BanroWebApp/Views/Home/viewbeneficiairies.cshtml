@model BanroWebApp.Models.AccountStatus
@{
    Layout = "~/Views/Shared/_Menu.cshtml";
    //  ViewBag.Title = "SearchDepartement";
}
@{

    ViewBag.Title = "AddBonCommand";
    Layout = "~/Views/Shared/_Menu.cshtml";
    BanroWebApp.Models.Authenticate auth2 = null;
    if (Session["userinfo"] != null)
    {
        auth2 = (BanroWebApp.Models.Authenticate)Session["userinfo"];
        if (!auth2.Priority.ToLower().Equals("administrator"))
        {
            Response.Redirect("AddEmployeeContractor");
        }
    }
    else
    {
        Response.Redirect("~/");
    }
}

<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h3 class="page-header">
                Beneficiairies List<i class="fa fa-users" style="float:right;"></i>
            </h3>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    @using (@Html.BeginForm())
    {
        <div style="width:100%;position:relative;left:0px;margin-left:0px;" id="page-wrapper" ng-app="app" ng-controller="CtrlHome">
            <div class="row">

                <div class="col-lg-12">
                    @{

                        if (Request.HttpMethod.Equals("POST"))
                        {
                           
                            if (ViewBag.message == "1")
                            {
                                <div class="alert alert-success" id="alertDep">
                                    Successfully Modify
                                </div>
                               
                            }
                            
                            else if (ViewBag.message == "3")
                            {
                                <div class="alert alert-danger" id="alertDep">
                                    No Action, The Employee is disabled
                                </div>

                            }
                            else
                            {
                                <div class="alert alert-warning" id="alertDep">
                                    No Action, Please check a value
                                </div>
                            }

                        }
                    }
                    @{
                        int index = 0;
                        List<BanroWebApp.Models.Employed> EC = new List<BanroWebApp.Models.Employed>();
                        System.Web.Script.Serialization.JavaScriptSerializer serial = new System.Web.Script.Serialization.JavaScriptSerializer();
                        serial.MaxJsonLength = Int32.MaxValue;
                        var db = new BanroWebApp.Models.BANROEntities();
                        var Query = from employee in db.t_beneficiaires
                                    join company in db.t_succursales on employee.C_id_succ equals company.C_id
									where  !employee.C_mat.Equals(null)

                                    select new { employee, company};
                        if (auth2.Priority.ToLower().Equals("administrator"))
                        {
                            Query = from employee in db.t_beneficiaires
                                    join company in db.t_succursales on employee.C_id_succ equals company.C_id

                                    where company.C_id.Equals(auth2.Succursale) &&  !employee.C_mat.Equals(null)
                                    select new { employee, company };
                        }
                        foreach (var item in Query)

                        {
                            BanroWebApp.Models.Employed ctr = new BanroWebApp.Models.Employed
                            {
                                id=item.employee.C_id.ToString(),
                                name=item.employee.C_name,
                                phone=item.employee.C_phone,
                                sex=item.employee.C_sex,
                                ID_Succursale=item.company.C_name,
                                ID_Departement=item.employee.C_id_depart.ToString(),
                                account_system=item.employee.C_status_system
                            };
                            EC.Add(ctr);

                        }
                        var QuerySpouse = from spouse in db.t_beneficiaires
                                          where !spouse.C_id_partenaire.Equals(null) && spouse.C_mat.Equals(null)
                                          select spouse;

                        var QueryChild = from childs in db.t_beneficiaires
                                         where !childs.C_id_parent.Equals(null) && childs.C_mat.Equals(null)
                                         select childs;

                        var dataAlls = serial.Serialize(EC);
                    }
                </div>


                <!-- /.col-lg-12 -->
            </div>
            <!-- /.row -->
            <div class="row" onload="" style="font-size:10px;">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-heading" style="display:inline-block;width:100%">
                            <a href="viewbeneficiairies" style="font-size:14px;"><i class="fa fa-users"></i> Employee View </a>
                            <a href="viewbeneficiairies?childs=views" style="font-size:14px;"><i class="fa fa-users"></i> Childrens View </a>
                            <a href="viewbeneficiairies?partners=views" style="font-size:14px;"><i class="fa fa-user"></i> Partners View </a>
                            <button type="submit"  class="btn btn-primary" style="float:right;display:inline-block"><i class="fa fa-lock"></i> Change</button>
                            <a href="AddBeneficiaire#/employed" class="btn btn-success" style="float:right;display:inline-block"><i class="fa fa-pencil"></i> Add new</a>

                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div class="dataTable_wrapper">
                                @if (String.IsNullOrEmpty(Request.Params["childs"]) && String.IsNullOrEmpty(Request.Params["partners"]))
                                {
                                   
                                    <table width="100%" class="table table-striped table-bordered table-hover" id="dataTables-example" style="font-size:10px;">
                                        <thead>
                                            <tr>
                                                <th style="display:none">Id</th>
                                                <th>Id Employee</th>
                                                <th>Name Employee</th>
                                                <th>Gender</th>
                                                <th>Phone</th>
                                                <th>Company</th>
                                                <th>Department</th>
                                                <th class="nosort">
                                                    <input style="display:block;z-index:9999" type="checkbox" name="name" onclick="allCheck(@dataAlls)" id="statusCheck" value="" />Account Status
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @{


                                                foreach (var item in Query)
                                                {
                                                    BanroWebApp.Models.Employed ctr = new BanroWebApp.Models.Employed
                                                    {
                                                        id = item.employee.C_id.ToString(),
                                                        name = item.employee.C_name,
                                                        phone = item.employee.C_phone,
                                                        sex = item.employee.C_sex,
                                                        ID_Succursale = item.company.C_name,
                                                        ID_Departement = item.employee.C_id_depart.ToString(),
                                                        account_system = item.employee.C_status_system,
                                                        Matricule = item.employee.C_mat
                                                    };
                                                    Dictionary<String, String> dict = new Dictionary<string, string>();
                                                    dict.Add("id", item.employee.C_id.ToString());
                                                    dict.Add("status", item.employee.C_status_system.ToString());
                                                    var data = serial.Serialize(dict);

                                                    String id = "t" + index;
                                                    String idE = "tide" + index;
                                                    String name = "tsex" + index;
                                                    String sex = "tname" + index;
                                                    String phone = "tphone" + index;
                                                    String company = "tcompany" + index;
                                                    String department = "tdepartment" + index;
                                                    int idDep = (int)item.employee.C_id_depart;
                                                    <tr class="odd gradeX">
                                                        <td style="display:none;" id="@idE">@item.employee.C_id</td>
                                                        <td id="@idE">@item.employee.C_mat</td>
                                                        <td id="@name">@item.employee.C_name</td>
                                                        <td id="@sex">@item.employee.C_sex</td>
                                                        <td id="@phone">@item.employee.C_phone</td>
                                                        <td id="@company">@item.company.C_name</td>
                                                        <td id="@department">@db.t_departement.Where(dep => dep.C_id.Equals(idDep)).FirstOrDefault().C_id_depart</td>
                                                        <td id="tdEmployee"> <input type="checkbox" name="name" onclick="fillTab(@data,@index)" id="@id" value=" " /> @(item.employee.C_status_system.Equals("1") ? "Enabled" : "Disabled")</td>


                                                    </tr>
                                                    index++;
                                                }
                                            }
                                        </tbody>
                                    </table>
                               }
                               
                                @if (!String.IsNullOrEmpty(Request.Params["childs"]) && String.IsNullOrEmpty(Request.Params["partners"]))
                                {
                                    <table width="100%" class="table table-striped table-bordered table-hover" id="dataTables-example" style="font-size:10px;">
                                        <thead>
                                            <tr>
                                                <th style="display:none">Id</th>
                                                <th>Name Child</th>
                                                <th>Gender</th>
                                                <th>Employee ID</th>
                                                <th>Employee Name</th>
                                        
                                                <th>Company</th>
                                                <th>Department</th>
                                                <th>
                                                    <input type="checkbox" name="name" onclick="allCheck(@dataAlls)" id="statusCheck" value=" " />Acount Status
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @{


                                                foreach (var item in QueryChild)
                                                {
                                                    try
                                                    {
                                                        if (!String.IsNullOrEmpty(item.C_id_parent))
                                                    {
                                                        int idP = int.Parse(item.C_id_parent.Trim());
                                                        var parent = (from ds1 in db.t_beneficiaires
                                                                      where ds1.C_id == idP
                                                                      select ds1).FirstOrDefault();
                                                        
                                                        BanroWebApp.Models.Children ctr = new BanroWebApp.Models.Children
                                                        {
                                                            id = item.C_id.ToString(),
                                                            name = item.C_name,
                                                            sex = item.C_sex,
                                                            parent = item.C_id_parent,
                                                            status=item.C_status_system
                                                        };
                                                        Dictionary<String, String> dict = new Dictionary<string, string>();
                                                        dict.Add("id", item.C_id.ToString());
                                                        dict.Add("status", item.C_status_system.ToString());
                                                        var data = serial.Serialize(dict);

                                                        String id = "t" + index;
                                                        String idE = "tide" + index;
                                                        String name = "tsex" + index;
                                                        String sex = "tname" + index;
                                                        String phone = "tphone" + index;
                                                        String company = "tcompany" + index;
                                                        String department = "tdepartment" + index;
                                                        
                                                        int idDep = (int)parent.C_id_depart;
                                                        <tr class="odd gradeX">
                                                            <td style="display:none;" id="@idE">@item.C_id</td>
                                                            <td id="@idE">@item.C_name</td>
                                                            <td id="@name">@item.C_sex</td>
                                                            <td id="@sex">@parent.C_mat</td>
                                                            <td id="@phone">@parent.C_name</td>
                                                   
                                                            <td id="@company">@db.t_succursales.Where(e => e.C_id.Equals(parent.C_id_succ)).FirstOrDefault().C_name</td>
                                                            <td id="@department">@db.t_departement.Where(dep => dep.C_id.Equals(idDep)).FirstOrDefault().C_id_depart</td>
                                                            <td  id="tdEmployee"> <input type="checkbox"  name="name" onclick="fillTab(@data,@index)" id="@id" value=" " /> @(item.C_status_system.Equals("1") ? "Enabled" : "Disabled")</td>


                                                        </tr>
                                                        index++;
                                                    }
                                                    }
                                                    catch (Exception ex)
                                                    {
                                                        
                                                    }
                                                    
                                                }
                                            }
                                        </tbody>
                                    </table>
                                }

                                @if (String.IsNullOrEmpty(Request.Params["childs"]) && !String.IsNullOrEmpty(Request.Params["partners"]))
                                {
                                    <table width="100%" class="table table-striped table-bordered table-hover" id="dataTables-example" style="font-size:10px;">
                                        <thead>
                                            <tr>
                                                <th style="display:none">Id</th>
                                                <th>Name Child</th>
                                                <th>Gender</th>
                                                <th>Employee ID</th>
                                                <th>Employee Name</th>
                                  
                                                <th>Company</th>
                                                <th>Department</th>
                                                <th>
                                                    <input type="checkbox" name="name" onclick="allCheck(@dataAlls)" id="statusCheck" value=" " />Acount Status
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @{


                                                foreach (var item in QuerySpouse)
                                                {

                                                    if (!String.IsNullOrEmpty(item.C_id_partenaire))
                                                    {
                                                        int idPart = int.Parse(item.C_id_partenaire.Trim());
                                                        var partner = (from ds1 in db.t_beneficiaires
                                                                       where ds1.C_id == idPart
                                                                       select ds1).FirstOrDefault();

                                                        if (partner!=null)
	                                                    {
		                                                    BanroWebApp.Models.Partner ctr= new BanroWebApp.Models.Partner
                                                        {
                                                            id = item.C_id.ToString(),
                                                            name = item.C_name,
                                                            sex = item.C_sex,
                                                            account_system=item.C_status_system,
                                                            partner=new BanroWebApp.Models.Partner
                                                            {
                                                                id=partner.C_id.ToString(),
                                                                name=partner.C_name
                                                            }
                                                        };
                                                        Dictionary<String, String> dict = new Dictionary<string, string>();
                                                        dict.Add("id", item.C_id.ToString());
                                                        dict.Add("status", item.C_status_system.ToString());
                                                        var data = serial.Serialize(dict);

                                                        String id = "t" + index;
                                                        String idE = "tide" + index;
                                                        String name = "tsex" + index;
                                                        String sex = "tname" + index;
                                                        String phone = "tphone" + index;
                                                        String company = "tcompany" + index;
                                                        String department = "tdepartment" + index;
                                                        int idDep = (int)partner.C_id_depart;
                                                        <tr class="odd gradeX">
                                                            <td style="display:none" id="@idE">@item.C_id</td>
                                                            <td id="@idE">@item.C_name</td>
                                                            <td id="@name">@item.C_sex</td>
                                                            <td id="@sex">@partner.C_mat</td>
                                                            <td id="@phone">@partner.C_name</td>
                                       
                                                            <td id="@company">@db.t_succursales.Where(e => e.C_id.Equals(partner.C_id_succ)).FirstOrDefault().C_name</td>
                                                            <td id="@department">@db.t_departement.Where(dep => dep.C_id.Equals(idDep)).FirstOrDefault().C_id_depart</td>
                                                            <td id="tdEmployee"> <input type="checkbox" name="name" onclick="fillTab(@data,@index)" id="@id" value=" " /> @(item.C_status_system.Equals("1") ? "Enabled" : "Disabled")</td>


                                                        </tr>
                                                        index++; 
	}
                                                    }
                                                }
                                            }
                                        </tbody>
                                    </table>
                                                }
                               
                                <div class="form-group" style="display:none">
                                    @Html.TextAreaFor(Models => Models.value, new { Class = "form-control", @Id = "valueAccount" })
                                </div>
                            </div>
                        </div>
                        <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" style="display:none;" id="modal">
                            Launch Demo Modal
                        </button>
                        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header" style="background-color: #337ab7;color:white;">
                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                        <h4 class="modal-title" id="myModalLabel"></h4>
                                    </div>

                                    <div class="modal-body">

                                        <label>List of departments</label>

                                        <select class="form-control" id="cbo_depart">
                                            <option ng-repeat="depart in ListDepartementBySucc">{{depart.code_depart}}</option>
                                        </select>

                                        <label>New Name</label>
                                        <input class="form-control" disabled="disabled" id="depDisabled">
                                        <input class="form-control" style="display:none" id="depSave" ng-model="updatedep">
                                    </div>
                                    <div class="modal-footer">
                                        <div class="alert alert-success" id="alertdep" style="display:none;float:left;width:70px;background-color:white;">
                                            Successfull modify
                                        </div>
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        @if (auth2.Priority.Equals("administrator") || auth2.Priority.Equals("user"))
                                        {
                                            <button type="button" ng-click="updateDepartement()" class="btn btn-primary">Save</button>

                                        }
                                    </div>
                                </div>
                                <!-- /.modal-content -->
                            </div>
                            <!-- /.modal-dialog -->
                        </div>
                        <!-- /.modal -->
                    </div>
                    <!-- /.row -->
                    <!-- /.row -->

                </div>
            </div>
        </div>
        @*<div class="form-group input-group">

                <form method="get">

                    <input type="text" name="idsucc" id="idsucc" class="form-control" />
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="submit" style="height:34px;">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>


                </form>
            </div>*@
                                            }
    <!-- /.row -->


</div>
<!-- /#page-wrapper -->
<script type="text/javascript" src="~/Scripts/jquery.min.js"></script>
<script>
    $(document).ready(function(){

    })

    var Table=[];
    var ctrlAccount=document.querySelector('#valueAccount');
    var ctr=0;
    function fillTab(object, index) {
        document.querySelector('#alertDep').style="display:none;"
        ctrlAccount.value = "";
        var t='#t'+index;

        if (document.querySelector(t).checked){
            Table.push(object);
            ctrlAccount.value = JSON.stringify(Table);
        }else {
            var i=Table.indexOf(object);
            Table.splice(i,1);
            console.log(Table.length)
            if (Table.length>0) {
                ctrlAccount.value = JSON.stringify(Table);
            } else {
                ctrlAccount.value = "";
            }

        }

        console.log(JSON.stringify(Table));
    }
    var allValue = true;
    function allCheck(listDatas) {
        
        document.querySelector('#alertDep').style = "display:none;"



        var td = document.querySelector('#tdEmployee');
        var statusCheck = document.querySelector('#statusCheck');
        if (statusCheck.checked==true) {
         
            var table = $('#dataTables-example').DataTable();
            var data = table.rows()
                            .data();
            //  alert("Lenght :" + data.length);
            //console.log("Data :", JSON.stringify(data));
            //alert("Length Search :" + table.rows({ page:'current'}).nodes().length);
   
          //  console.log(table.rows({ page: 'current' }).data()[0]);
            for (var i = 0; i < table.rows({ page: 'current' }).nodes().length; i++) {
                var currentTab=table.rows({ page: 'current' }).data()[i];
                var k=currentTab[7].toString().lastIndexOf(' ');
                var status=currentTab[7].toString().substring(k);
                var id=currentTab[7].toString().substring(currentTab[7].toString().indexOf('id=')).trim();
             
                id='#'+id.split('"')[1];
                document.querySelector(id).checked=true;
                console.log("Id Cell :",id);
                var obj=
                    {
                        id:currentTab[0].trim(),
                        status:(status.trim()=="Enabled"?"1":"0")
                    }
                   
               // console.log('Object  :',obj)
                Table.push(obj);
            }
            //console.log('Table :',JSON.stringify(Table));

          
            ctrlAccount.value = JSON.stringify(Table);
            console.log(JSON.stringify(Table))


        } else {
            Table=[];
            var table = $('#dataTables-example').DataTable();
            var data = table.rows()
                            .data();
            for (var i = 0; i < table.rows({ page: 'current' }).nodes().length; i++) {
                var currentTab=table.rows({ page: 'current' }).data()[i];
                var k=currentTab[7].toString().lastIndexOf(' ');
                var status=currentTab[7].toString().substring(k);
                var id=currentTab[7].toString().substring(currentTab[7].toString().indexOf('id=')).trim();
             
                id='#'+id.split('"')[1];
                document.querySelector(id).checked=false;
               
            }
        }


    }
    $(document).ready(function () {
        //console.log("jQuery Test");
        $('#dataTables-example').DataTable({
            responsive: true,
            'ordering':false
        });
    });

</script>
